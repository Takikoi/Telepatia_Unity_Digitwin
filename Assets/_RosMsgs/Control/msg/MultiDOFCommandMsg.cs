//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Control
{
    [Serializable]
    public class MultiDOFCommandMsg : Message
    {
        public const string k_RosMessageName = "control_msgs/MultiDOFCommand";
        public override string RosMessageName => k_RosMessageName;

        //  The message defines command for multiple degrees of freedom (DoF) typically used by many controllers.
        //  The message intentionally avoids 'joint' nomenclature because it can be generally use for command with
        //  different semantic meanings, e.g., joints, Cartesian axes, or have abstract meaning like GPIO interface.
        //  names of degrees of freedom
        public string[] dof_names;
        //  values used by most of the controller
        public double[] values;
        //  First derivation of the values, e.g., velocity if values are positions.
        //  This is useful for PID and similar controllers.
        public double[] values_dot;

        public MultiDOFCommandMsg()
        {
            this.dof_names = new string[0];
            this.values = new double[0];
            this.values_dot = new double[0];
        }

        public MultiDOFCommandMsg(string[] dof_names, double[] values, double[] values_dot)
        {
            this.dof_names = dof_names;
            this.values = values;
            this.values_dot = values_dot;
        }

        public static MultiDOFCommandMsg Deserialize(MessageDeserializer deserializer) => new MultiDOFCommandMsg(deserializer);

        private MultiDOFCommandMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.dof_names, deserializer.ReadLength());
            deserializer.Read(out this.values, sizeof(double), deserializer.ReadLength());
            deserializer.Read(out this.values_dot, sizeof(double), deserializer.ReadLength());
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.WriteLength(this.dof_names);
            serializer.Write(this.dof_names);
            serializer.WriteLength(this.values);
            serializer.Write(this.values);
            serializer.WriteLength(this.values_dot);
            serializer.Write(this.values_dot);
        }

        public override string ToString()
        {
            return "MultiDOFCommandMsg: " +
            "\ndof_names: " + System.String.Join(", ", dof_names.ToList()) +
            "\nvalues: " + System.String.Join(", ", values.ToList()) +
            "\nvalues_dot: " + System.String.Join(", ", values_dot.ToList());
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
