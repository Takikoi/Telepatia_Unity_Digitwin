//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Control
{
    [Serializable]
    public class SingleDOFStateMsg : Message
    {
        public const string k_RosMessageName = "control_msgs/SingleDOFState";
        public override string RosMessageName => k_RosMessageName;

        //  This message presents current controller state of one degree of freedom.
        //  DoF name, e.g., joint or Cartesian axis name
        public string name;
        //  The set point, that is, desired state.
        public double reference;
        //  Current value of the process (ie: latest sensor measurement on the controlled value).
        public double feedback;
        //  First time-derivative of the process value. E.g., velocity.
        public double feedback_dot;
        //  The error of the controlled value, essentially process_value - set_point (for a regular PID implementation).
        public double error;
        //  First time-derivative of the error of the controlled value.
        public double error_dot;
        //  Time between two consecutive updates/execution of the control law.
        public double time_step;
        //  Current output of the controller.
        public double output;

        public SingleDOFStateMsg()
        {
            this.name = "";
            this.reference = 0.0;
            this.feedback = 0.0;
            this.feedback_dot = 0.0;
            this.error = 0.0;
            this.error_dot = 0.0;
            this.time_step = 0.0;
            this.output = 0.0;
        }

        public SingleDOFStateMsg(string name, double reference, double feedback, double feedback_dot, double error, double error_dot, double time_step, double output)
        {
            this.name = name;
            this.reference = reference;
            this.feedback = feedback;
            this.feedback_dot = feedback_dot;
            this.error = error;
            this.error_dot = error_dot;
            this.time_step = time_step;
            this.output = output;
        }

        public static SingleDOFStateMsg Deserialize(MessageDeserializer deserializer) => new SingleDOFStateMsg(deserializer);

        private SingleDOFStateMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.name);
            deserializer.Read(out this.reference);
            deserializer.Read(out this.feedback);
            deserializer.Read(out this.feedback_dot);
            deserializer.Read(out this.error);
            deserializer.Read(out this.error_dot);
            deserializer.Read(out this.time_step);
            deserializer.Read(out this.output);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.name);
            serializer.Write(this.reference);
            serializer.Write(this.feedback);
            serializer.Write(this.feedback_dot);
            serializer.Write(this.error);
            serializer.Write(this.error_dot);
            serializer.Write(this.time_step);
            serializer.Write(this.output);
        }

        public override string ToString()
        {
            return "SingleDOFStateMsg: " +
            "\nname: " + name.ToString() +
            "\nreference: " + reference.ToString() +
            "\nfeedback: " + feedback.ToString() +
            "\nfeedback_dot: " + feedback_dot.ToString() +
            "\nerror: " + error.ToString() +
            "\nerror_dot: " + error_dot.ToString() +
            "\ntime_step: " + time_step.ToString() +
            "\noutput: " + output.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
